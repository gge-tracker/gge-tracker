######################################################################################
#                                     __                        __                   #
#      ____   ____   ____           _/  |_____________    ____ |  | __ ___________   #
#     / ___\ / ___\_/ __ \   ______ \   __\_  __ \__  \ _/ ___\|  |/ // __ \_  __ \  #
#    / /_/  > /_/  >  ___/  /_____/  |  |  |  | \// __ \\  \___|    <\  ___/|  | \/  #
#    \___  /\___  / \___  >          |__|  |__|  (____  /\___  >__|_ \\___  >__|     #
#   /_____//_____/      \/                            \/     \/     \/    \/         #
#                                                                                    #
#                     This file is part of the gge-tracker project.                  #
#        Copyrights (c) 2025 - gge-tracker.com & gge-tracker contributors            #
#                                                                                    #
######################################################################################

FROM node:20-slim AS build

LABEL fly_launch_runtime="NodeJS"

WORKDIR /app
ENV NODE_ENV=production

RUN apt-get update -qq && apt-get install -y \
    build-essential \
    pkg-config \
    python-is-python3

COPY src .
COPY package*.json ./

RUN if [ ! -f config/credentials.json ] || [ ! -f config/instances.json ]; then \
    echo "Error: config/credentials.json and/or config/instances.json not found!"; exit 1; \
fi

ARG HAS_GBL
RUN if [ "${HAS_GBL}" = "true" ]; then \
    cp config/credentials_gbl.json config/credentials.json && \
    cp config/instances_gbl.json config/instances.json; \
fi

RUN npm install --omit=dev

FROM node:20-alpine

RUN apk add --no-cache \
    bash \
    ca-certificates \
    chromium \
    curl \
    dbus \
    freetype \
    harfbuzz \
    nss \
    ttf-freefont \
    udev \
    xvfb \
    && rm -rf /var/cache/apk/*

ENV CHROME_PATH=/usr/bin/chromium-browser
ENV NODE_ENV=production

WORKDIR /app
COPY --from=build /app /app
RUN npm install --omit=dev

COPY docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

ENTRYPOINT [ "docker-entrypoint.sh" ]
CMD [ "npm", "run", "start" ]
